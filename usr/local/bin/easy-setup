#!/bin/sh

# Part of tiny-radioCD project, originally designed & hand-crafted by macmpi
# check License at project home https://github.com/macmpi/tiny-radioCD



# diskless: check ssh key existence and save accordingly
if [ -e /etc/tiny-radiocd_ssh_nokeys ] && { \
[ -n "$(find /etc/dropbear/ -name 'dropbear_*_host_key' 2> /dev/null | head -1)" ] || \
[ -n "$(find /etc/ssh/ -name 'ssh_host_*' 2> /dev/null | head -1)" ]; }; then
		rm -f /etc/tiny-radiocd_ssh_nokeys
		lbu commit -d
fi


# Manage Settings and files
[ -d /etc/tiny-radioCD ] || exit   #no easy config directory

. /etc/tiny-radioCD/tiny-radioCD.conf
TOUCHED=false

###############################
# Wifi setup: we add new SSID before exiting config
# this ensure older config fallback (and multi-site usage)

# Only touch if wireless interface exists and SSID set
if [ -e /sys/class/net/wlan0 ] && [ -n "${SSID// /}" ]; then

	logger -st ${0##*/} "Setting $SSID wifi network..."
	# Take care of network interfaces: add wlanO if not available
	if ! cat /etc/network/interfaces | grep -q "wlan0"; then
		echo "auto wlan0" >> /etc/network/interfaces
		echo "iface wlan0 inet dhcp" >> /etc/network/interfaces
		TOUCHED=true
	fi

# Take care of wpa_supplicant

	case "$Security" in
		"WPA-PSK")
			NEW="network={
	ssid=\"$SSID\"
	key_mgmt=$Security
	psk=\"$Password\"
}"
		;;
		"open")
			NEW="network={
	ssid=\"$SSID\"
	key_mgmt=$Security
}"
		;;
	esac

	Country="country=$Country"
	CONFIG="$(grep -v "country=" /etc/wpa_supplicant/wpa_supplicant.conf 2> /dev/null)"

	case "$CONFIG" in
		*"$NEW"*)	# config already exists, do nothing
		;;

		*)			# add new config first
			printf "$Country\n\n" > /tmp/wpa_supplicant.conf
			printf "$NEW\n\n" >> /tmp/wpa_supplicant.conf
			printf "$CONFIG\n" >> /tmp/wpa_supplicant.conf
			mv /tmp/wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
			TOUCHED=true
		;;
	esac

	rm -f /tmp/wpa_supplicant.conf

	if $TOUCHED && { service networking status | grep -q started; }; then
		service wpa_supplicant restart
		service networking restart
	fi
fi


###############################
# Bluetooth pairing and speaker setup if successful (and is one)
# Bluetooth device references may be MAC address or names (or parts of)

if [ -e /sys/class/bluetooth/hci0 ] && [ -n "${Speaker// /}${Remote// /}" ]; then
	# if they are MAC addresses, make them CAPITALS
	echo "$Speaker" | grep -q "[[:xdigit:]:]\{17\}" && \
	Speaker="$( echo "$Speaker" | grep -o "[[:xdigit:]:]\{17\}" | tr a-z A-Z )"

	echo "$Remote" | grep -q "[[:xdigit:]:]\{17\}" && \
	Remote="$( echo "$Remote" | grep -o "[[:xdigit:]:]\{17\}" | tr a-z A-Z )"

	logger -st ${0##*/} "Trying to pair new devices: $Speaker $Remote"

	#  Bluetooth pairing & speaker connection
	LIST="$(bluetoothctl paired-devices)"	# responds with capitalized MAC & name

	for device in Speaker Remote; do
		device=$( eval "echo \$$device" )
		[ -z "$device" ] && continue
		case "$LIST" in
			*"$device"*)	# already paired
				logger -st ${0##*/} "$device was already paired"
			;;
			*)				# not yet paired, lets do it!
				if address="$( pair-device "$device" )"; then	# pair-device returns MAC address
					TOUCHED=true
					logger -st ${0##*/} "$device paired successfully"
					[ "$device" = "$Speaker" ] && \
					bluetoothctl info "$address" | grep -q "UUID: Audio Sink" && \
					set-speaker "$address"		# new speaker paired: set-it up for MPD
				else
					logger -st ${0##*/} "$device pairing failed"
				fi
			;;
		esac
	done

fi

###############################
# Import customized GLOBALS
if [ -s /etc/tiny-radioCD/GLOBALS ]; then
	logger -st ${0##*/} "Importing GLOBALS"
	install -m644 /etc/tiny-radioCD/GLOBALS /usr/local/bin/GLOBALS > /dev/null 2>&1
	TOUCHED=true
fi

###############################
# Import custom mpd.conf
if [ -s /etc/tiny-radioCD/mpd.conf ]; then
	logger -st ${0##*/} "Importing mpd.conf"
	install -m644 /etc/tiny-radioCD/mpd.conf /etc/mpd.conf > /dev/null 2>&1
	TOUCHED=true
fi


###############################
# Import custom remotes-mapping
if [ -s /etc/tiny-radioCD/Remotes.map ]; then
	logger -st ${0##*/} "Importing Remotes.map"
	install -m644 /etc/tiny-radioCD/Remotes.map /etc/acpi.map > /dev/null 2>&1
	TOUCHED=true
fi

###############################
# If custom playlists exist, pull-them into MPD playlist directory
if [ -n "$(find /etc/tiny-radioCD/ -name '*.m3u' | head -1)" ]; then
	logger -st ${0##*/} "Importing Playlists"
	install -m644 -o mpd -g audio /etc/tiny-radioCD/*.m3u /var/lib/mpd/playlists/. > /dev/null 2>&1
	TOUCHED=true
fi

###############################
# If custom tones exist, pull-them into MPD music/.tones directory
if [ -n "$(find /etc/tiny-radioCD/ -name '*.mp3' | head -1)" ]; then
	logger -st ${0##*/} "Importing system tones"
	install -m644 -o mpd -g audio /etc/tiny-radioCD/tone-*.mp3 /var/lib/mpd/music/.tones/. > /dev/null 2>&1
	TOUCHED=true
fi

###############################
# other stuff?...


###############################
# If not in sys mode, commit changes
if $TOUCHED; then
	grep -q "root=" /proc/cmdline || lbu commit -d
fi

exit 0

