#!/bin/sh

# Part of tiny-radioCD project, originally designed & hand-crafted by macmpi
# check License at project home https://github.com/macmpi/tiny-radioCD


# Pairs by MAC Address (preferred) of by device name (or portion of it)
# Those references are provided as a string in input parameter
# MAC in CAPITALS, name portions without any special characters ()[], spaces OK
# output parameter delivers MAC address if pairing is successful

REFERENCE="$1" # ref might be MAC address (preferred) or a name portion
MAC=""
PROMPT="^.*].*#"

export SEXPECT_SOCKFILE=/tmp/SOCKFILE
sexpect spawn -autowait bluetoothctl --agent NoInputNoOutput

sexpect expect -ex "Agent registered" > /dev/null 2>&1
sexpect expect -anchor -re "$PROMPT" > /dev/null 2>&1

# To try save (long) discovery, check if already available in devices list
sexpect send -enter "devices" > /dev/null 2>&1
sexpect expect -timeout 1 -anchor -re "^.*Device .*$REFERENCE.*" > /dev/null 2>&1
MAC="$( sexpect expect_out | grep "$REFERENCE" | grep -o "[[:xdigit:]:]\{17\}" )"

# Go for discovery scan
if [ -z "$MAC" ]; then
	sexpect send -enter "scan on" > /dev/null 2>&1
	sexpect expect -ex "Discovery started" > /dev/null 2>&1

	sexpect expect -timeout 45 -anchor -re "^.*[^L].*] Device .*$REFERENCE.*" > /dev/null 2>&1
	MAC="$( sexpect expect_out | grep "$REFERENCE" | grep -o "[[:xdigit:]:]\{17\}" )"

	sexpect send -enter "scan off" > /dev/null 2>&1
	sexpect expect -ex "Discovery stopped" > /dev/null 2>&1
	sexpect expect -anchor -re "$PROMPT" > /dev/null 2>&1
fi

# Go for Pairing & trust
if [ -n "$MAC" ]; then
	sexpect send -enter "pair $MAC" > /dev/null 2>&1
	sexpect expect -timeout 5 -ex "Pairing successful" > /dev/null 2>&1
	if sexpect expect_out | grep -q "Pairing successful"; then
		sexpect send -enter "trust $MAC" > /dev/null 2>&1
		sexpect expect -anchor -re "$PROMPT" > /dev/null 2>&1
	else
		MAC=""
	fi
fi

sexpect send -enter exit > /dev/null 2>&1

echo "$MAC"
if [ -n "$MAC" ]; then
	exit 0
else
	exit 1
fi

